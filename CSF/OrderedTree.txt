order_of_key():-the number of items in a set that are strictly smaller than our item.

find_by_order():-the iterator to kth largest element in the set.

-->You can erase elements from the multiset.

1. find the index of the element using `order_of_key`
2. store it in `idx`
3. delete using `s.erase(s.find_by_order(idx))`


-->You can try this to erase by value from ordered multiset(or wwhatever it's called in technical terms)

How to use Ordered Multiset

typedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

To erase by value from Ordered Multiset: os.erase(os.find_by_order(os.order_of_key(val)));
      
                                         ***Ordered Set***

#include <bits/extc++.h>
using namespace __gnu_pbds;
template<class T>
using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;