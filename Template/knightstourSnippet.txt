

{"": {
	"prefix": "knightstour",
	"body": [
	  " ",
	  "/**",
	  " *    Author:  knightstour",
	  " *    Created: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND ",
	  " *    Contest:    ",
	  "**/ ",
	  "                          ",
	  "#pragma GCC optimize(\"O3\")",
	  "#pragma GCC optimize(\"Ofast,unroll-loops\")",
	  "",
	  "#include<bits/stdc++.h>",
	  "#include<ext/pb_ds/assoc_container.hpp>",
	  "",
	  "#define debug(x) cout<<\"#\"<<\" \"<<x<<endl;",
	  "#define debugset(st) cout<<\"[\"; for(auto it:st) {cout<<it<<\",\";} cout<<\"]\"<<endl;",
	  "#define debugmap(mp) cout<<\"[\"; for(auto it:mp) {cout<<\"[\"<<it.first<<\",\"<<it.second<<\"]\"<<\",\";} cout<<\"]\"<<endl;",
	  "#define forl(i,n) for(int i=0;i<n;i++)",
	  "#define endl \"\\n\"",
	  "#define pr(n) cout<<fixed<<setprecision(n);",
	  "#define sz(a) (int)a.size()",
	  "#define mkp make_pair",
	  "#define pb(x) emplace_back(x)",
	  "#define pp pop_back",
	  "#define all(a) a.begin(),a.end()",
	  "#define rall(a) a.rbegin(),a.rend()",
	  "",
	  "using namespace __gnu_pbds;",
	  "using namespace std;",
	  "using ll=long long; ",
	  "",
	  "template<typename T>",
	  "T add(T a, T b)",
	  "{",
	  "    return a+b;",
	  "}",
	  "template<typename T>",
	  "T mul(T a,T b)",
	  "{",
	  "    return a*b;",
	  "}",
	  "",
	  "template<typename T>",
	  "void func(T n)",
	  "{",
	  "    cout<<n<<endl;//exit stratgy for one argument",
	  "}",
	  "template<typename T,typename... Args>",
	  "void func(T a,Args... b)",
	  "{",
	  "    cout<<a<<endl;",
	  "    func(b...);",
	  "}",
	  "",
	  "typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;",
	  "",
	  "const int M=1e9+7;",
	  "const int  N=1e7+19;",
	  "ll sum(ll a, ll b) {",
	  "    a += b;",
	  "    if (a >= M)",
	  "        a -= M;",
	  "    return a;",
	  "}",
	  " ",
	  "ll sub(ll a, ll b) {",
	  "    a -= b;",
	  "    if (a < 0)",
	  "        a += M;",
	  "    return a;",
	  "}",
	  " ",
	  "ll mult(ll a, ll b) {",
	  "    return 1ll * a * b % M;",
	  "}",
	  " ",
	  "ll bp(ll a, ll b) {",
	  "    ll res = 1;",
	  "    while (b) {",
	  "        if (b & 1)",
	  "            res = mult(res, a);",
	  "        a = mult(a, a);",
	  "        b >>= 1;",
	  "    }",
	  "    return res;",
	  "}",
	  " ",
	  "ll inv(ll x) {",
	  "    return bp(x, M - 2);",
	  "}",
	  "ll nCr(ll n,ll r)",
	  "{",
	  "    if (n < r)",
	  "        return 0;",
	  " ",
	  "    if (r == 0)",
	  "        return 1;",
	  "        ",
	  "    vector<ll>fac(n+1,0);",
	  "    fac[0]=1;",
	  "    for (ll i=1;i<=n;i++)",
	  "        fac[i] = (fac[i - 1] * i) % M;",
	  " ",
	  "    return (fac[n] * inv(fac[r]) % M * inv(fac[n - r]) % M) % M;",
	  "}",
	  "ll getMSB(ll n) {",
	  "      n|=(n>>1);",
	  "      n|=(n>>2);",
	  "      n|=(n>>4);",
	  "      n|=(n>>8);",
	  "      n|=(n>>16);",
	  "      return n - (n>>1);",
	  "}",
	  "bool Subseq(string a, string b) {",
	  "    int idx= -1;",
	  "    for (char c : a) {",
	  "        idx= b.find(c, idx+ 1);",
	  "        if (idx== string::npos) {",
	  "            return false;",
	  "        }",
	  "    }",
	  "    return true;",
	  "}",
	  "void setIO(string fileName=\"\")",
	  "{",
	  "    if (sz(fileName)) {",
	  "freopen((fileName + \".in\").c_str(), \"r\", stdin); ",
	  "freopen((fileName + \".out\").c_str(), \"w\", stdout);",
	  "}",
	  "}",
	  "",
	  "void knightstour() {",
	  "    ",
	  "} ",
	  "",
	  "int main()",
	  "{",
	  "    ios::sync_with_stdio(false);",
	  "    cin.tie(nullptr);",
	  "    setIO();",
	  "    int t=1;",
	  "    cin>>t;",
	  "    while(t--)",
	  "    {",
	  "         knightstour();",
	  "    }",
	  "}"
	],
	"description": ""
  }
}